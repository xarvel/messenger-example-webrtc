# Indicates exactly one field must be supplied and this field must not be `null`.
directive @oneOf on INPUT_OBJECT

type Message {
  id: ID!
  text: String!
  creationDate: Date!
  senderID: String!
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type MessageEdge {
  cursor: String!
  node: Message!
}

type MessageConnection {
  edges: [MessageEdge!]!
  pageInfo: PageInfo!
}

type SendMessageResponse {
  messageEdge: MessageEdge!
}

type User {
  id: ID!
  name: String!
}

type Chat {
  id: ID!
  participants: [User!]!
}

type Viewer {
  currentUserID: String!
}

type CallSignal {
  type: CallSignalType!
  payload: String!
  chatID: String!
}

enum CallSignalType {
  ICE_CANDIDATE
  OFFER
  ANSWER
}

# Date custom scalar type
scalar Date

type Query {
  viewer: Viewer!
  chat(id: ID!): Chat!
  messages(
    last: Int
    before: String
    first: Int
    after: String
    chatID: ID!
  ): MessageConnection!
}

type Mutation {
  sendMessage(input: SendMessageInput!): SendMessageResponse!
  removeMessages(id: ID!): [ID!]!
  setTyping(chatID: String!): Boolean!
  sendCallSignal(input: CallSignalInput!): Boolean!
  endCall(chatID: String!): Boolean!
}

input SendMessageInput {
  text: String!
  chatID: ID!
}

input CallSignalInput {
  type: CallSignalType!
  payload: String!
  chatID: String!
}

type Subscription {
  isTyping(chatID: String!): ID!
  messageAdded(chatID: String!): MessageEdge!
  messageRemoved(chatID: String!): [ID!]!
  messageUpdated(chatID: String!): Message!
  callSignalReceived(chatID: String!): CallSignal!
  callEnded(chatID: String!): Boolean!
}
